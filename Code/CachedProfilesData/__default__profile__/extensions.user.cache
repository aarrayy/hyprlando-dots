{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/array/.vscode/extensions/extensions.json","path":"/home/array/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1704671280475,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.85.1","productDate":"2023-12-13T09:47:11.635Z","productCommit":"0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"bmalehorn.shell-syntax","uuid":"85929697-6cf9-4067-a5b5-d3fa74f53e8e"},"manifest":{"name":"shell-syntax","displayName":"Shell Syntax","description":"Lint syntax errors in bash, zsh, and sh","publisher":"bmalehorn","license":"MIT","repository":{"url":"https://github.com/bmalehorn/vscode-shell-syntax"},"version":"1.0.5","engines":{"vscode":"^1.46.0"},"icon":"icon.png","categories":["Linters","Programming Languages"],"keywords":["bash","zsh","fish","shell","syntax","lint"],"activationEvents":["onLanguage:shellscript"],"extensionKind":["workspace"],"contributes":{"configuration":{"properties":{"shell-syntax.defaultShell":{"type":"string","default":"bash","description":"Which language to lint on, if no extension or #! detected","enum":["bash","zsh","sh"]}}}},"main":"./out/extension.js","scripts":{"vscode:prepublish":"yarn run compile","compile":"tsc -p ./","lint":"eslint src --ext ts","watch":"tsc -watch -p ./","pretest":"yarn run compile && yarn run lint","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^7.1.1","@types/mocha":"^7.0.2","@types/node":"^13.11.0","@types/vscode":"^1.46.0","@typescript-eslint/eslint-plugin":"^2.26.0","@typescript-eslint/parser":"^2.26.0","eslint":"^6.8.0","glob":"^7.1.6","mocha":"^7.1.1","typescript":"^3.8.3","vscode-test":"^1.3.0"},"husky":{"hooks":{"pre-commit":"pretty-quick --staged"}},"dependencies":{"prettier":"^2.0.5","pretty-quick":"^2.0.1"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/bmalehorn.shell-syntax-1.0.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"85929697-6cf9-4067-a5b5-d3fa74f53e8e","publisherId":"1215635c-400c-4cc8-96d3-f2d5da4774a4","publisherDisplayName":"Brian Malehorn","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699755578,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"jeff-hykin.better-shellscript-syntax","uuid":"f27ad139-0ff0-4fea-a7c3-d1af80eed6ae"},"manifest":{"name":"better-shellscript-syntax","displayName":"Better Shell Syntax","version":"1.6.3","repository":{"url":"https://github.com/jeff-hykin/better-shell-syntax","type":"git"},"icon":"icon.png","scripts":{},"keywords":["syntax","textmate","highlighting","coloring","color"],"engines":{"vscode":"^1.0.0"},"author":"Jeff Hykin","publisher":"jeff-hykin","contributes":{"grammars":[{"language":"shellscript","scopeName":"source.shell","path":"autogenerated/shell.tmLanguage.json","balancedBracketScopes":["*"],"unbalancedBracketScopes":["punctuation.definition.case-pattern.shell"]}]},"categories":["Programming Languages"],"description":"This enables your theme to better color your code. There are \"textmate scopes\" that your theme uses to apply color, this extension adds/improves the textmate scopes which should improve the way your code looks.","bugs":{"url":"https://github.com/jeff-hykin/better-shell-syntax/issues"},"homepage":"https://github.com/jeff-hykin/better-shell-syntax#readme","license":"ISC","devDependencies":{"chalk":"^2.4.2","dictionary-en-us":"^2.1.1","lodash":"^4.17.19","nspell":"^2.1.2","oniguruma":"^7.2.0","textmate-bailout":"^1.1.0","vsce":"^1.99.0","yargs":"^17.5.1","ovsx":"^0.5.1","textmate-tester":"^1.1.9"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/jeff-hykin.better-shellscript-syntax-1.6.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"f27ad139-0ff0-4fea-a7c3-d1af80eed6ae","publisherId":"b734936b-6cc4-40c1-b17a-c6a7e1f680cd","publisherDisplayName":"Jeff Hykin","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699781771,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"jeff-hykin.xd-theme","uuid":"88225360-4a70-4a01-bdbd-32d7ecd8d123"},"manifest":{"name":"xd-theme","displayName":"XD Theme","description":"A theme because my settings file was too large","version":"0.2.32","publisher":"jeff-hykin","license":"MIT","author":"Jeff Hykin","icon":"logo.png","galleryBanner":{"color":"#11131C","theme":"dark"},"engines":{"vscode":"^1.31.0"},"scripts":{"build":"ruby theme_generator.rb","publish":"npm run build && git add -A && git commit -m \"commit\" && git pull && git push && vsce publish patch && git push"},"categories":["Themes","Other"],"keywords":["VSCode","Themes"],"contributes":{"themes":[{"label":"XD Theme","path":"./export/theme.json","uiTheme":"vs-dark"},{"label":"XD Theme - Lighten","path":"./export/theme-lighten.json","uiTheme":"vs-dark"},{"label":"XD Theme - MixItUp","path":"./export/theme-mix-it-up.json","uiTheme":"vs-dark"},{"label":"XD Theme - Two Tone","path":"./export/theme-two-tone.json","uiTheme":"vs-dark"}]},"repository":{"type":"git","url":"git+https://github.com/jeff-hykin/vsc-material-theme.git"},"bugs":{"url":"https://github.com/jeff-hykin/vsc-material-theme/issues"},"homepage":"https://github.com/jeff-hykin/vsc-material-theme#readme","dependencies":{"@vscode/vsce":"=2.15.0","ovsx":"=0.7.1"},"devDependencies":{}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/jeff-hykin.xd-theme-0.2.32","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"88225360-4a70-4a01-bdbd-32d7ecd8d123","publisherId":"b734936b-6cc4-40c1-b17a-c6a7e1f680cd","publisherDisplayName":"Jeff Hykin","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699872629},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"liviuschera.noctis","uuid":"d4e2a48f-0b88-4540-92c5-a4ab4dd2c813"},"manifest":{"name":"noctis","displayName":"Noctis","description":"Noctis is a collection of light & dark themes with a well balanced blend of warm and cold colors","version":"10.43.1","publisher":"liviuschera","icon":"images/logo.png","engines":{"vscode":"^1.43.0"},"extensionKind":["ui","workspace"],"galleryBanner":{"color":"#052529","theme":"dark"},"repository":{"type":"git","url":"https://github.com/liviuschera/noctis"},"scripts":{"build":"node src/build.mjs","release:major---":"npm run build && git add . && git commit -m 🆕10.0.0🆕 && npm version major & vsce publish && git push","release:minor":"npm run build && git add . && git commit -m 10.43.0 && npm version minor & vsce publish && git push","release:patch":"npm run build && git add . && git commit -m 10.41.2 && npm version patch & vsce publish && git push"},"categories":["Themes","Other"],"keywords":["noctis","blue","azure","semantic","italic","bold"],"contributes":{"themes":[{"label":"Noctis Lux","uiTheme":"vs","path":"./themes/lux.json"},{"label":"Noctis Hibernus","uiTheme":"vs","path":"./themes/hibernus.json"},{"label":"Noctis Lilac","uiTheme":"vs","path":"./themes/lilac.json"},{"label":"Noctis","uiTheme":"vs-dark","path":"./themes/noctis.json"},{"label":"Noctis Azureus","uiTheme":"vs-dark","path":"./themes/azureus.json"},{"label":"Noctis Bordo","uiTheme":"vs-dark","path":"./themes/bordo.json"},{"label":"Noctis Obscuro","uiTheme":"vs-dark","path":"./themes/obscuro.json"},{"label":"Noctis Sereno","uiTheme":"vs-dark","path":"./themes/sereno.json"},{"label":"Noctis Uva","uiTheme":"vs-dark","path":"./themes/uva.json"},{"label":"Noctis Viola","uiTheme":"vs-dark","path":"./themes/viola.json"},{"label":"Noctis Minimus","uiTheme":"vs-dark","path":"./themes/minimus.json"}]}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/liviuschera.noctis-10.43.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"d4e2a48f-0b88-4540-92c5-a4ab4dd2c813","publisherId":"676e5383-8870-48a9-80bb-67ae23e9228c","publisherDisplayName":"Liviu Schera","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699881544},"isValid":true,"validations":[[2,"property `extensionKind` can be defined only if property `main` is also defined."]]},{"type":1,"identifier":{"id":"equinusocio.vsc-material-theme-icons","uuid":"6959958f-be4d-42c4-8aa4-dc2c2f086b0a"},"manifest":{"name":"vsc-material-theme-icons","displayName":"Material Theme Icons","description":"Material Theme Icons, the most epic icons theme for Visual Studio Code and Material Theme.","version":"3.3.1","publisher":"equinusocio","license":"Apache-2.0","author":"Mattia Astorino [@equinusocio]","icon":"logo.png","engines":{"vscode":"^1.36.0"},"repository":{"type":"git","url":"https://github.com/material-theme/vsc-material-theme-icons.git"},"galleryBanner":{"color":"#11131C","theme":"dark"},"categories":["Themes","Other"],"keywords":["VSCode","Themes"],"activationEvents":["onStartupFinished"],"extensionKind":["ui","workspace"],"main":"./out/src/extension","contributes":{"menus":{"commandPalette":[{"command":"eqMaterialThemeIcons.fixIcons","when":"config.materialTheme.accent == true"}]},"commands":[{"command":"eqMaterialThemeIcons.fixIcons","title":"Fix icons accent. Based on Material Theme","category":"Material Theme Icons"}],"iconThemes":[{"id":"eq-material-theme-icons","label":"Material Theme Icons","path":"./out/variants/Material-Theme-Icons.json"},{"id":"eq-material-theme-icons-darker","label":"Material Theme Icons Darker","path":"./out/variants/Material-Theme-Icons-Darker.json"},{"id":"eq-material-theme-icons-palenight","label":"Material Theme Icons Palenight","path":"./out/variants/Material-Theme-Icons-Palenight.json"},{"id":"eq-material-theme-icons-ocean","label":"Material Theme Icons Ocean","path":"./out/variants/Material-Theme-Icons-Ocean.json"},{"id":"eq-material-theme-icons-light","label":"Material Theme Icons Light","path":"./out/variants/Material-Theme-Icons-Light.json"},{"id":"eq-material-theme-icons-deepforest","label":"Material Theme Icons Deepforest","path":"./out/variants/Material-Theme-Icons-Deepforest.json"}]},"scripts":{"precompile":"run-s cleanup","compile":"tsc -p ./","watch":"tsc -watch -p ./","cleanup":"rimraf out","build":"run-s cleanup && tsc -p ./ && cp src/defaults.json out/src/ && node out/build/index.js --ignore-engines","postinstall":"node ./node_modules/vscode/bin/install","pretest":"rimraf ./.nyc_output ./coverage && run-s compile","test":"nyc -x '' mocha","test:travis":"run-s pretest && nyc -x '' mocha","posttest:travis":"nyc report --reporter=text-lcov > coverage.lcov && codecov","test:vs":"node ./node_modules/vscode/bin/test","release":"git pull && standard-version --release-as patch && git push --follow-tags","release:minor":"git pull && standard-version --release-as minor && git push --follow-tags","release:major":"git pull && standard-version --release-as major && git push --follow-tags"},"devDependencies":{"@types/chai":"4.3.11","@types/mocha":"10.0.6","@types/mustache":"4.2.5","@types/ncp":"2.0.8","@types/node":"20.10.1","@types/rimraf":"3.0.2","@types/semver":"7.5.6","@types/sinon":"17.0.2","chai":"4.3.10","codecov":"3.8.3","cpy":"8.1.2","execa":"5.1.1","json-minify":"1.0.0","mocha":"10.2.0","mustache":"4.2.0","npm-run-all":"4.1.5","nyc":"15.1.0","rimraf":"5.0.5","sinon":"17.0.1","svgo":"3.0.5","typescript":"5.3.2","vscode":"1.1.37"},"badges":[{"url":"https://camo.githubusercontent.com/d3c6e53aa66426dead24cdedab0e83082103bea6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f657175696e75736f63696f2f7673632d6d6174657269616c2d7468656d652e7376673f7374796c653d666c61742d737175617265","href":"https://github.com/material-theme/vsc-material-theme-icons/issues","description":"Open issues"},{"url":"https://img.shields.io/badge/Support%20this%20project-%F0%9F%92%96%EF%B8%8F-green.svg?style=flat-square","href":"https://opencollective.com/material-theme","description":"Support us!"}],"dependencies":{"semver":"7.5.4","standard-version":"9.5.0"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/equinusocio.vsc-material-theme-icons-3.3.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"6959958f-be4d-42c4-8aa4-dc2c2f086b0a","publisherId":"3b9d55d2-da9e-415a-9bea-8d6bc07147d8","publisherDisplayName":"Equinusocio","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699897872},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"equinusocio.vsc-material-theme","uuid":"45bfc9eb-5e03-487f-bffe-315fa6881d6a"},"manifest":{"name":"vsc-material-theme","displayName":"Material Theme","description":"The most epic theme now for Visual Studio Code","version":"34.3.1","publisher":"Equinusocio","license":"Apache-2.0","author":"Mattia Astorino [@equinusocio]","icon":"logo.png","funding":{"type":"opencollective","url":"https://opencollective.com/material-theme"},"galleryBanner":{"color":"#11131C","theme":"dark"},"homepage":"https://material-theme.dev","repository":{"type":"git","url":"https://github.com/material-theme/vsc-material-theme.git"},"bugs":{"url":"https://github.com/material-theme/vsc-material-theme/issues"},"extensionPack":["equinusocio.vsc-material-theme-icons"],"engines":{"node":">=12","vscode":"^1.51.0"},"scripts":{"build":"run-s cleanup build:ts build:generate-themes build:ui","cleanup":"rimraf build && rimraf dist","lint":"eslint .","build:ui":"node dist/scripts/ui/index.js","build:generate-themes":"node dist/scripts/generator/index.js","build:ts":"tsc -p ./tsconfig.json && ncp dist/src/ build && ncp material-theme.config.json build","postinstall":"node ./node_modules/vscode/bin/install && tsc -p tsconfig.json","release":"git pull && standard-version --release-as minor && git push --follow-tags","release:patch":"git pull && standard-version --release-as patch && git push --follow-tags","release:major":"git pull && standard-version -release-as major && git push --follow-tags"},"categories":["Themes","Other"],"keywords":["VSCode","Themes"],"activationEvents":["onStartupFinished"],"extensionKind":["ui","workspace"],"main":"./build/material.theme.config","capabilities":{"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"materialTheme.setAccent","title":"Set accent color","category":"Material Theme"},{"command":"materialTheme.showReleaseNotes","title":"Release Notes","category":"Material Theme"}],"configuration":{"type":"object","title":"Material Theme","properties":{"materialTheme.accent":{"type":"string","default":"Blue","enum":["Acid Lime","Blue","Breaking Bad","Bright Teal","Cyan","Graphite","Indigo","Lime","Orange","Pink","Purple","Red","Sky","Tomato","Teal","Yellow"],"description":"Current accent color selected","scope":"window"}}},"themes":[{"label":"Material Theme","path":"./build/themes/Material-Theme-Default.json","uiTheme":"vs-dark"},{"label":"Material Theme High Contrast","path":"./build/themes/Material-Theme-Default-High-Contrast.json","uiTheme":"vs-dark"},{"label":"Material Theme Darker","path":"./build/themes/Material-Theme-Darker.json","uiTheme":"vs-dark"},{"label":"Material Theme Darker High Contrast","path":"./build/themes/Material-Theme-Darker-High-Contrast.json","uiTheme":"vs-dark"},{"label":"Material Theme Palenight","path":"./build/themes/Material-Theme-Palenight.json","uiTheme":"vs-dark"},{"label":"Material Theme Palenight High Contrast","path":"./build/themes/Material-Theme-Palenight-High-Contrast.json","uiTheme":"vs-dark"},{"label":"Material Theme Ocean","path":"./build/themes/Material-Theme-Ocean.json","uiTheme":"vs-dark"},{"label":"Material Theme Ocean High Contrast","path":"./build/themes/Material-Theme-Ocean-High-Contrast.json","uiTheme":"vs-dark"},{"label":"Material Theme Deepforest","path":"./build/themes/Material-Theme-Deepforest.json","uiTheme":"vs-dark"},{"label":"Material Theme DeepForest High Contrast","path":"./build/themes/Material-Theme-Deepforest-High-Contrast.json","uiTheme":"vs-dark"},{"label":"Material Theme Lighter","path":"./build/themes/Material-Theme-Lighter.json","uiTheme":"vs"},{"label":"Material Theme Lighter High Contrast","path":"./build/themes/Material-Theme-Lighter-High-Contrast.json","uiTheme":"vs"}]},"extensionDependency":["Equinusocio.vsc-material-theme-icons"],"badges":[{"url":"https://img.shields.io/github/issues/material-theme/vsc-material-theme","href":"https://github.com/material-theme/vsc-material-theme/issues","description":"Open issues"},{"url":"https://img.shields.io/badge/%E2%9D%A4%EF%B8%8F-s?style=for-the-badge&logo=open-collective&label=Support%20us&labelColor=%233b79d6&color=%233b79d6","href":"https://opencollective.com/material-theme","description":"Support us!"}],"devDependencies":{"@moxer/vscode-theme-generator":"1.21.0","@types/browserify":"12.0.36","@types/fs-extra":"8.1.0","@types/rimraf":"3.0.2","@typescript-eslint/eslint-plugin":"3.3.0","@typescript-eslint/parser":"3.3.0","browserify":"16.5.1","eslint":"7.2.0","eslint-config-xo-space":"0.25.0","eslint-config-xo-typescript":"0.31.0","fs-extra":"9.0.1","ncp":"2.0.0","npm-run-all":"4.1.5","standard-version":"9.5.0","typescript":"4.1.3","vscode":"1.1.37"},"dependencies":{"@sanity/client":"2.1.0","opencollective":"1.0.3"},"collective":{"type":"opencollective","url":"https://opencollective.com/material-theme","logo":"https://opencollective.com/opencollective/logo.txt"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/equinusocio.vsc-material-theme-34.3.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"45bfc9eb-5e03-487f-bffe-315fa6881d6a","publisherId":"3b9d55d2-da9e-415a-9bea-8d6bc07147d8","publisherDisplayName":"Equinusocio","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699900992},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"azemoh.one-monokai","uuid":"b027c4b2-25ad-46db-b574-05dae3b2dc92"},"manifest":{"name":"one-monokai","displayName":"One Monokai Theme","description":"A cross between Monokai and One Dark theme","version":"0.5.0","publisher":"azemoh","engines":{"vscode":"^1.13.0"},"categories":["Themes"],"icon":"icon.png","contributes":{"themes":[{"label":"One Monokai","uiTheme":"vs-dark","path":"./themes/OneMonokai-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/azemoh/vscode-one-monokai.git"},"bugs":{"url":"https://github.com/azemoh/vscode-one-monokai/issues"},"homepage":"https://github.com/azemoh/vscode-one-monokai/blob/master/README.md","keywords":["Vscode","Theme","Onedark","Monokai"],"author":"Joshua Azemoh <joshazemoh@gmail.com> (http://azemoh.com)","license":"MIT"},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/azemoh.one-monokai-0.5.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"b027c4b2-25ad-46db-b574-05dae3b2dc92","publisherId":"25cdca6a-b422-4806-9041-a44a52d1a7d5","publisherDisplayName":"Joshua Azemoh","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699905639},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"johnpapa.winteriscoming","uuid":"fd6d3dc6-b307-4589-82a6-78e2afec3d77"},"manifest":{"name":"winteriscoming","displayName":"Winter is Coming Theme","description":"Preferred dark/light themes by John Papa","icon":"images/winteriscoming-icon.png","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/johnpapa/vscode-winteriscoming.git"},"galleryBanner":{"color":"#373436","theme":"dark"},"version":"1.4.4","publisher":"johnpapa","keywords":["Theme","Dark Theme","Light Theme"],"scripts":{"list":"npx vsce ls","package":"npx vsce package","publish":"npx vsce publish"},"engines":{"vscode":"^1.17.0"},"categories":["Themes","Other"],"contributes":{"themes":[{"label":"Winter is Coming (Dark Blue)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-blue-color-theme.json"},{"label":"Winter is Coming (Dark Blue - No Italics)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-blue-color-no-italics-theme.json"},{"label":"Winter is Coming (Light)","uiTheme":"vs","path":"./themes/WinterIsComing-light-color-theme.json"},{"label":"Winter is Coming (Light - No Italics)","uiTheme":"vs","path":"./themes/WinterIsComing-light-color-no-italics-theme.json"},{"label":"Winter is Coming (Dark Black)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-color-theme.json"},{"label":"Winter is Coming (Dark Black - No Italics)","uiTheme":"vs-dark","path":"./themes/WinterIsComing-dark-color-no-italics-theme.json"}]}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/johnpapa.winteriscoming-1.4.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"fd6d3dc6-b307-4589-82a6-78e2afec3d77","publisherId":"4434843a-4ebf-4f44-84f5-4176380c492d","publisherDisplayName":"John Papa","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699914025},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"hedinne.popping-and-locking-vscode","uuid":"1edaf626-3d50-4223-abdb-0a09c33bb1e9"},"manifest":{"name":"popping-and-locking-vscode","displayName":"Popping and Locking Theme","description":"Vivid and well balanced theme for VS Code.","version":"2.0.11","publisher":"hedinne","author":"Hedinn Eiriksson","license":"mit","engines":{"vscode":"^1.12.0"},"categories":["Themes"],"galleryBanner":{"color":"#21222d","theme":"dark"},"icon":"images/icon.png","tags":["js","jsx","osx","git","css","dark","blue","icon","scss","html","clean","green","macOS","vivid","theme","yellow","windows","orginal","balanced","saturated","beautiful","dark theme","color-theme","web development"],"screenshots":[{"path":"images/js.png"},{"path":"images/jsx.png"},{"path":"images/scss.png"},{"path":"images/html.png"},{"path":"images/json.png"}],"homepage":"https://github.com/hedinne/popping-and-locking-vscode/blob/master/README.md","repository":{"type":"git","url":"https://github.com/hedinne/popping-and-locking-vscode.git"},"contributes":{"themes":[{"label":"Popping and Locking","uiTheme":"vs-dark","path":"./themes/popping-and-locking-color-theme.json"}]}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/hedinne.popping-and-locking-vscode-2.0.11","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"1edaf626-3d50-4223-abdb-0a09c33bb1e9","publisherId":"65a088bc-3a5e-485e-83a2-87837645d68b","publisherDisplayName":".hedinne","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699920191},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"peaceshi.syntax-highlight","uuid":"2588b242-ad5f-469d-b5d3-69319e24cb43"},"manifest":{"name":"syntax-highlight","version":"0.0.14","displayName":"Syntax Highlight Theme","description":"Theme highlight for many languages (semantic highlight support now!)","publisher":"peaceshi","license":"MIT","icon":"icon.png","qna":"marketplace","author":{"name":"peaceshi"},"categories":["Programming Languages","Themes"],"engines":{"vscode":"*"},"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"bugs":{"url":"https://github.com/peaceshi/Syntax-Highlight-Theme/issues","email":"peaceshi@outlook.com"},"repository":{"url":"https://github.com/peaceshi/Syntax-Highlight-Theme.git","type":"git"},"keywords":["c++","cpp","color","colour","coloring","dark","highlight","highlighting","material","peaceshi","react","syntax","textmate","theme","themes"],"contributes":{"themes":[{"id":"Syntax Material Dark Level 1 (beta)","label":"Syntax Material Dark Level 1 (beta)","uiTheme":"vs-dark","path":"./themes/semanticHighlighting.json"},{"id":"Syntax Material Dark","label":"Syntax Material Dark","uiTheme":"vs-dark","path":"./themes/dark_material.json"}]},"iconThemes":[{"id":"","label":"","path":""}],"dependencies":{"fs-extra":"^8.1.0","glob":"^7.1.6","jsonc-parser":"^2.2.0"},"devDependencies":{"@types/fs-extra":"^8.0.1","@types/glob":"^7.1.1","@types/node":"^12.12.22","@typescript-eslint/eslint-plugin":"^2.13.0","@typescript-eslint/parser":"^2.13.0","eslint":"^6.8.0","eslint-config-prettier":"^6.7.0","eslint-plugin-prettier":"^3.1.2","prettier":"^1.19.1","ts-node":"^8.5.4","typescript":"^3.7.4","typescript-eslint":"0.0.1-alpha.0","typescript-tslint-plugin":"^0.5.5"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/peaceshi.syntax-highlight-0.0.14","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"2588b242-ad5f-469d-b5d3-69319e24cb43","publisherId":"8a0db879-e467-40da-bfae-dfb7fdf89296","publisherDisplayName":"peaceshi","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703699926422},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"nico-castell.linux-desktop-file","uuid":"1895bcfc-fdd4-4263-ade3-4aa598a21fda"},"manifest":{"publisher":"nico-castell","name":"linux-desktop-file","repository":{"url":"https://github.com/nico-castell/desktop-file-support"},"displayName":"Linux Desktop File support","description":"Add support for .desktop files in linux","icon":"assets/extension_icon.png","version":"0.0.21","engines":{"vscode":"^1.52.0"},"categories":["Programming Languages"],"contributes":{"languages":[{"id":"desktop","aliases":["Desktop","desktop"],"firstLine":"^\\[Desktop Entry\\]","extensions":[".desktop",".theme"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"desktop","scopeName":"source.desktop","path":"./syntaxes/desktop.tmLanguage.json"}],"snippets":[{"language":"desktop","path":"./snippets/snippets.json"}]}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/nico-castell.linux-desktop-file-0.0.21","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"1895bcfc-fdd4-4263-ade3-4aa598a21fda","publisherId":"649d2304-cde5-42ca-b949-be064632bd2e","publisherDisplayName":"Nicolás Castellán","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703700624405,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"tamasfe.even-better-toml","uuid":"b2215d5f-675e-4a2b-b6ac-1ca737518b78"},"manifest":{"name":"even-better-toml","displayName":"Even Better TOML","description":"Fully-featured TOML support","version":"0.19.2","autoTag":{"enabled":true},"repository":{"url":"https://github.com/tamasfe/taplo"},"bugs":{"url":"https://github.com/tamasfe/taplo/issues"},"publisher":"tamasfe","author":{"name":"tamasfe"},"preview":true,"icon":"taplo-icon.png","galleryBanner":{"color":"#731c12","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.68.0"},"categories":["Programming Languages","Linters","Formatters","Other"],"activationEvents":["onLanguage:toml","onLanguage:cargoLock","onCommand:evenBetterToml.pasteAsJson","onCommand:evenBetterToml.copyAsJson","onCommand:evenBetterToml.pasteAsToml","onCommand:evenBetterToml.copyAsToml"],"keywords":["toml","syntax","rust","formatter","config"],"extensionKind":["workspace"],"contributes":{"grammars":[{"language":"toml","scopeName":"source.toml","path":"./toml.tmLanguage.json"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./toml.frontmatter.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.toml.codeblock","path":"./toml.markdown.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.toml":"toml"}}],"languages":[{"id":"toml","aliases":["TOML"],"extensions":[".toml"],"filenames":["Cargo.lock"],"configuration":"./language-configuration.json"}],"menus":{"commandPalette":[{"command":"evenBetterToml.selectSchema","when":"editorLangId == toml"},{"command":"evenBetterToml.copyAsJson"},{"command":"evenBetterToml.copyAsToml"},{"command":"evenBetterToml.pasteAsJson"},{"command":"evenBetterToml.pasteAsToml"}]},"commands":[{"command":"evenBetterToml.selectSchema","title":"TOML: Select Schema"},{"command":"evenBetterToml.copyAsJson","title":"TOML: Copy as JSON","enablement":"editorHasSelection"},{"command":"evenBetterToml.copyAsToml","title":"TOML: Copy as TOML","enablement":"editorHasSelection"},{"command":"evenBetterToml.pasteAsJson","title":"TOML: Paste as JSON"},{"command":"evenBetterToml.pasteAsToml","title":"TOML: Paste as TOML"}],"semanticTokenTypes":[{"id":"tomlArrayKey","superType":"variable","description":"Keys of regular arrays."},{"id":"tomlTableKey","superType":"variable","description":"Keys of inline tables."}],"semanticTokenScopes":[{"scopes":{"tomlArrayKey":["support.type.property-name.array.toml"],"tomlTableKey":["support.type.property-name.table.toml"]}}],"configuration":{"title":"Even Better TOML","properties":{"evenBetterToml.taplo.bundled":{"description":"Use the bundled taplo language server. If set to `false`, the `taplo` executable must be found in PATH or must be set in `evenBetterToml.taplo.path`.","type":"boolean","scope":"resource","default":true},"evenBetterToml.taplo.path":{"description":"An absolute path to the `taplo` executable. `evenBetterToml.taplo.bundled` needs to be set to `false` for this to have any effect.","type":["string","null"],"scope":"resource","default":null},"evenBetterToml.taplo.environment":{"type":["object"],"scope":"resource","description":"Environment variables for Taplo.","additionalProperties":{"type":"string"},"default":{}},"evenBetterToml.taplo.extraArgs":{"type":["array","null"],"scope":"resource","description":"Additional arguments for Taplo. Has no effect for the bundled LSP.","items":{"type":"string"},"default":[]},"evenBetterToml.taplo.configFile.path":{"description":"An absolute, or workspace relative path to the Taplo configuration file.","type":"string","default":null,"scope":"resource"},"evenBetterToml.taplo.configFile.enabled":{"description":"Whether to enable the usage of a Taplo configuration file.","type":"boolean","scope":"resource","default":true},"evenBetterToml.semanticTokens":{"description":"Enable semantic tokens for inline table and array keys.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.enabled":{"description":"Enable completion and validation based on JSON schemas.","type":"boolean","scope":"resource","default":true},"evenBetterToml.schema.links":{"description":"Whether to show clickable links for keys in the editor.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.catalogs":{"description":"A list of URLs to schema catalogs where schemas and associations can be fetched from","type":"array","scope":"resource","items":{"type":"string"},"default":["https://www.schemastore.org/api/json/catalog.json"]},"evenBetterToml.schema.associations":{"description":"Document and schema associations.","markdownDescription":"Additional document and schema associations. \n\n The key must be a regular expression, this pattern is used to associate schemas with absolute document URIs. Overlapping patterns result in undefined behaviour and either matching schema can be used. \n\n The value must be an absolute URI to the JSON schema, for supported values and more information [read here](https://taplo.tamasfe.dev/configuration#visual-studio-code).","type":"object","scope":"resource","default":{}},"evenBetterToml.schema.cache.memoryExpiration":{"description":"The amount of seconds after which schemas will be invalidated from memory.","markdownDescription":"The amount of seconds after which schemas will be invalidated from memory. \n**NOTE**: setting too low values will cause performance issues and validation of some schemas will fail.","type":"integer","scope":"resource","minimum":0,"default":60},"evenBetterToml.schema.cache.diskExpiration":{"description":"The amount of seconds after which cached catalogs and schemas expire and will be attempted to be fetched again.","type":"integer","scope":"resource","minimum":0,"default":600},"evenBetterToml.completion.maxKeys":{"description":"The maximum amount of keys in a dotted key to display during completion, 0 effectively disables key completions.","type":"integer","scope":"resource","minimum":0,"default":5},"evenBetterToml.syntax.semanticTokens":{"description":"Whether to enable semantic tokens for tables and arrays.","type":"boolean","scope":"resource","default":true},"evenBetterToml.formatter.alignEntries":{"scope":"resource","type":"boolean","default":null,"description":"Align entries vertically. Entries that have table headers, comments, or blank lines between them are not aligned."},"evenBetterToml.formatter.alignComments":{"scope":"resource","type":"boolean","default":null,"description":"Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items"},"evenBetterToml.formatter.arrayTrailingComma":{"scope":"resource","type":"boolean","default":null,"description":"Put trailing commas for multiline arrays."},"evenBetterToml.formatter.arrayAutoExpand":{"scope":"resource","type":"boolean","default":null,"description":"Automatically expand arrays to multiple lines."},"evenBetterToml.formatter.inlineTableExpand":{"scope":"resource","type":"boolean","default":null,"description":"Expand values inside in line tables."},"evenBetterToml.formatter.arrayAutoCollapse":{"scope":"resource","type":"boolean","default":null,"description":"Automatically collapse arrays if they fit in one line."},"evenBetterToml.formatter.compactArrays":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside single-line arrays."},"evenBetterToml.formatter.compactInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside inline tables."},"evenBetterToml.formatter.compactEntries":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace around `=`."},"evenBetterToml.formatter.columnWidth":{"scope":"resource","type":"number","default":null,"description":"Target maximum column width after which arrays are expanded into new lines."},"evenBetterToml.formatter.indentTables":{"scope":"resource","type":"boolean","default":null,"description":"Indent subtables if they come in order."},"evenBetterToml.formatter.indentEntries":{"scope":"resource","type":"boolean","default":null,"description":"Indent entries under tables."},"evenBetterToml.formatter.indentString":{"scope":"resource","type":"string","default":null,"description":"Indentation to use, should be tabs or spaces but technically could be anything."},"evenBetterToml.formatter.trailingNewline":{"scope":"resource","type":"boolean","default":null,"description":"Add trailing newline to the source."},"evenBetterToml.formatter.reorderKeys":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder keys that are not separated by blank lines."},"evenBetterToml.formatter.reorderArrays":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder array values that are not separated by blank lines."},"evenBetterToml.formatter.allowedBlankLines":{"scope":"resource","type":"number","default":null,"description":"The maximum amount of consecutive blank lines allowed."},"evenBetterToml.formatter.crlf":{"scope":"resource","type":"boolean","default":null,"description":"Use CRLF line endings."},"evenBetterToml.rules":{"scope":"resource","type":"array","default":[],"description":"Array of Taplo rules in JSON format, see https://taplo.tamasfe.dev/configuration/file.html#rules. The rules given here are appended to existing rules from config files, if any. There is no conversion done, all object keys must be snake_case, including formatting rules."}}}},"main":"./dist/extension.js","browser":"./dist/browser-extension.js","scripts":{"vscode:prepublish":"yarn build","open-in-browser":"vscode-test-web --extensionDevelopmentPath=. .","build:syntax":"ts-node --project node.tsconfig.json src/syntax/index.ts","build:browser-extension":"rollup -c rollup.config.browser-extension.js","build:browser-server":"rollup -c rollup.config.browser-server.js","build:node":"rollup -c rollup.config.js","build":"rm -rf dist && yarn build:syntax && yarn build:node && yarn build:browser-extension && yarn build:browser-server"},"dependencies":{"@taplo/lsp":"0.6.0","deep-equal":"^2.0.5","encoding":"^0.1.13","fast-glob":"^3.2.11","node-fetch":"^3.2.6","vscode-languageclient":"8.0.2-next.5","which":"^2.0.2"},"devDependencies":{"@rollup/plugin-commonjs":"^22.0.0","@rollup/plugin-node-resolve":"^13.3.0","@rollup/plugin-replace":"^4.0.0","@types/deep-equal":"^1.0.1","@types/node":"^18.0.0","@types/vscode":"^1.68.0","@types/which":"^2.0.1","@vscode/test-web":"^0.0.24","esbuild":"^0.14.45","rollup":"^2.75.6","rollup-plugin-esbuild":"^4.9.1","ts-node":"^10.8.1","typescript":"^4.7.4"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/tamasfe.even-better-toml-0.19.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"b2215d5f-675e-4a2b-b6ac-1ca737518b78","publisherId":"78c2102e-13a2-49ea-ac79-8d1bbacbbf0e","publisherDisplayName":"tamasfe","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1703721553974,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), code formatting, refactoring, unit tests, and more.","version":"2023.22.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","saveEditor","terminalDataWriteEvent","terminalExecuteCommandEvent"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.82.0"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Formatters","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugDynamicConfigurations:python","onDebugResolve:python","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\n**Tip**: Run the ``Python: Select Interpreter`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a Python interpreter from the status bar"},"when":"workspaceFolderCount == 0"},{"id":"python.createEnvironment","title":"Create a Python Environment ","description":"Create an environment for your Python project.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).\n 🔍 Check out our [docs](https://aka.ms/pythonenvs) to learn more.","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":"workspaceFolderCount > 0"},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonWelcome2","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"false","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment2","title":"Create or select a Python Environment ","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"markdown":"resources/walkthrough/environments-info.md"},"when":""},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS2","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"show","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"],"tags":["experimental"]},"python.createEnvironment.trigger":{"default":"off","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"],"tags":["experimental"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string","tags":["experimental"]},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.debugInTerminal","group":"navigation@1","title":"Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","@vscode/jupyter-lsp-middleware":"^0.2.50","arch":"^2.1.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^8.2.0","vscode-languageclient":"^9.0.1","vscode-languageserver-protocol":"^3.17.5","vscode-tas-client":"^0.1.75","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^18.17.1","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.81.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^2.3.4","@vscode/vsce":"^2.18.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","webpack":"^5.76.0","worker-loader":"^3.0.8","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance"]},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/ms-python.python-2023.22.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1704372728862,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2023.12.1","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.78.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available."},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":false},"[html]":{"editor.formatOnType":true}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameters:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"description":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"description":"Offer auto-import completions.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"description":"When typing a '{' in a string, automatically prefix the string with an 'f'.","scope":"resource","tags":["experimental"]},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"description":"Automatically add common search paths like 'src'.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","description":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","description":"Analysis mode for diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"description":"Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"description":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":false,"description":"Indices for all third party libraries will be persisted to disk.","scope":"resource","tags":["experimental"]},"python.analysis.extraCommitChars":{"type":"boolean","default":true,"description":"Allow using '.', '(' as commit characters when applicable.","scope":"resource","tags":["experimental"]},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"description":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","strict"],"description":"Defines the default rule set for type checking. Note that the default value is set to \"basic\" when using VS Code Insiders, and to \"off\" otherwise.","enumDescriptions":["Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.","All \"off\" rules + basic type checking rules.","All \"off\" rules + all type checking rules."],"scope":"resource","tags":["experimental"]},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"enumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"description":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.addImport.exactMatchOnly":{"type":"boolean","default":false,"description":"Offer only exact matches in `add import` code actions","scope":"resource","tags":["experimental"]},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true or always false. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for unbound and possibly unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.logLevel":{"type":"string","default":"Information","description":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"]},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"description":"Defines the default format for import module.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"resource","description":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"description":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.enablePytestExtra":{"type":"boolean","default":false,"description":"Enables extra pytest support in Pylance [Experimental]. For internal use only, may cause Pylance to stop working.","scope":"resource","tags":["experimental"]},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":false,"description":"For string literals that look like module names, enables goto definition to go to the module.","scope":"resource","tags":["experimental"]}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run build:tests && node ./src/tests/runTests.js && npm run test:web","test:web":"npm run webpack && node ./build/launchWebTests.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@datadog/pprof":"^3.1.0","@electron/rebuild":"^3.2.13","@types/jest":"^29.5.3","@types/mocha":"^10.0.1","@types/node":"^17.0.45","@types/source-map-support":"^0.5.6","@types/vscode":"^1.78.0","@types/webpack":"^5.28.1","@types/webpack-env":"^1.18.1","@vscode/test-electron":"^2.3.3","@vscode/test-web":"^0.0.44","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.0.1","javascript-obfuscator":"4.0.2","jest":"^29.6.1","jest-cli":"^29.6.1","jest-environment-node":"^29.6.1","jest-junit":"^16.0.0","mocha":"^10.2.0","node-abi":"^3.45.0","shx":"^0.3.4","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.9","ts-jest":"^29.1.1","ts-loader":"^9.4.4","ts-mockito":"^2.6.1","ts-node":"^10.9.1","typescript":"~4.4.4","vsce":"^2.7.0","webpack":"^5.88.1","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.8.3","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","querystring-es3":"^0.2.1","semver":"^7.5.4","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-languageclient":"8.1.0","vscode-languageserver":"8.1.0","vscode-languageserver-protocol":"3.17.3","vscode-languageserver-types":"3.17.3","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/ms-python.vscode-pylance-2023.12.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1704372732744,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"jackjyq.brogrammer-plus","uuid":"195d286a-12d5-499f-9c9a-4c79f422dea2"},"manifest":{"name":"brogrammer-plus","displayName":"Brogrammer Plus","description":"An improved Brogrammer theme with semantic highlighting, WCAG AAA text color, companion terminal themes, and material-designed UI. / 一款改进的 Brogrammer 主题，拥有语义高亮功能、符合 WCAG AAA 文本配色、配套的终端主题、以及符合 Material Design 的界面设计。","version":"1.0.0","engines":{"vscode":"^1.65.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Brogrammer Plus","uiTheme":"vs-dark","path":"./themes/brogrammer-plus-color-theme.json"}]},"repository":"https://github.com/jackjyq/vscode-theme-brogrammer-plus","publisher":"jackjyq","icon":"icon.png"},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/jackjyq.brogrammer-plus-1.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"195d286a-12d5-499f-9c9a-4c79f422dea2","publisherId":"e71c598a-4275-4762-88fc-f2864b0346bb","publisherDisplayName":"Jack Jiang","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1704372883402,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"smpl-ndrw.deep-dark-space","uuid":"ef5eb239-6b0a-4a5a-8014-cca7ad8a4159"},"manifest":{"name":"deep-dark-space","displayName":"Deep Dark Space","description":"Syntax has never been so beautiful.","version":"0.7.0","publisher":"smpl-ndrw","icon":"astronaut-icon.png","engines":{"vscode":"^1.85.0"},"repository":{"type":"git","url":"https://github.com/smpl-ndrw/deep-dark-space.git"},"galleryBanner":{"color":"#050c26","theme":"dark"},"keywords":["dark","deep","theme","space","abyss","tokyo","solarized","pro","dracula","official","one","monokai","night","material","winter","synthwave","palenight","cobalt","andromeda","atom","nord","sublime","bearded","darcula","eva","omni","vue","react","svelte","vim","neovim","nvim","gruvbox","markdown","github","rainbow","rainglow","slack","2077","cyberpunk","electron","bluloco","green","blue","darkblue","darkgreen","angular","city","light","flat","aura","doki","ruby","helium","magenta","cyan","orange","carbon","bear","color","copilot","super","aurora","x","syntax","ariake","kanagawa","firefox","hack","azure","halcyon","firefly","base","hyper","symbols","black","radical","code","snazzy","slime","nebula","moon","beautiful","atomize","webstorm","lazer","wolf","cold","xcode","notepad","sea","jetbrains","infinity","neon","fantastic","midnight","modern","purple","laravel","simple","default","pink","classic","symfony","smooth","universe","python","swift","rust","just","omi","c#","c++","java","dart","go","php","blade","windows","astro","tailwind","wind","frost","edge","nano","arc","vs","chrome","horizon","script","os","shadow","soft","retro","free","flow","best","ultimate","next","shade","high","better","zen","turbo","new","panda","dev","style","cozy","relax","galaxy","art","dream","star","noctis","ayu","power","shell","hop","cool","game","disc","linux","calm","cat","gray","red","violet","yellow","gold","silver","obsidian","max","min","day","mac","icon","coffee","brown","clean","nice","good","background","sun","true","mars","focus","forest","vscode","vampire","tesla","man","pack","old","cor","kai","app","hot","rose","zero","plus","can","wave","cos","pop","javascript","type","typescript","clojure","yaml","node","semantic","ice","glow","tea","fork","dif","bar","ai","vibe","japan","bun","css","html","net","com","full","ultra","text","terminal","minimal","ocean","extra"],"categories":["Themes"],"contributes":{"themes":[{"label":"Deep Dark Space","uiTheme":"vs-dark","path":"./themes/Deep Dark Space-color-theme.json"}]}},"location":{"$mid":1,"path":"/home/array/.vscode/extensions/smpl-ndrw.deep-dark-space-0.7.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"ef5eb239-6b0a-4a5a-8014-cca7ad8a4159","publisherId":"9c106b49-d02d-4be1-b7f8-82ede2ed60e6","publisherDisplayName":"smpl-ndrw","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1704671276104},"isValid":true,"validations":[]}]}